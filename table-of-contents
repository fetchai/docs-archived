For reference purpose only: table of contents of the new docs 


// LANDING PAGE

- Welcome to the Fetch.ai documentation!

- What is Fetch.ai? High level overview

- Technology
    The Fetch.ai Blockchain
    Smart contracts
    The Agent Framework
    The simple Open Economic Framework (sOEF)

- Present and future
    Recent achievements
      Network
      Agent framework
      Our DeFi Agent
    Roadmap for 2021

- White Paper and publications



// GETTING STARTED

- Overview: Networks, Tokens, Staking
    Networks
    Tokens
    Staking

- Wallets

- Creating a mainnet address for your native FET
    Using the Cosmostation smartphone application
    Using our Keplr-based Chrome browser extension
    Using our Fetch.ai v2.0 mainnet wallet, with your Ledger Nano and our Block explorer interface

- Converting your ERC-20 FET to native FET

- Converting your native FET to ERC-20 FET

- Claiming your native FET tokens after the migration period

- Staking
    Staking native FET vs staking ERC-20 FET
      Staking native FET on mainnet
      Staking ERC-20 FET on Ethereum
    How to stake native FET
      Staking with our Keplr Chrome extension
      Staking with our Fetch.ai v2.0 Mainnet wallet paired with your Ledger Nano, using our block explorer
      Staking with Cosmostation
    How to stake ERC-20 FET



// VALIDATORS

- Becoming a validator
    
- Description of the network

- Validator revenue
    How it works
    Validator revenue sources
        Block rewards
        Transaction fees
        Agent and Machine Learning services
    Validators minimal revenue

- Hardware requirements

- Technical requirements

- The Know Your Validator program

- Running a Single Node Network
    Network setup
        Build the ledger from source
        Remove any existing networks
        Create an initial genesis
        Create your validator key
        Adding the validator to the network
        Generating a validator transaction
        Building the complete genesis
    Running the local node
    Resetting the network



Coming:
Developers (Agent Framework)
Developers (Smart contracts)
