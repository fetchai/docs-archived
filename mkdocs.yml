site_name: Fetch.AI Developer Documentation
site_url: https://docs.fetch.ai/
site_description: Everything you need to know about Fetch.AI. 
#repo_url: https://github.com/fetchai // commented out to remove edit option
#repo_name: 'GitHub'
site_author: katharine.murphy@fetch.ai

theme:
  name: 'material'
  logo:
    icon: code
  custom_dir: custom_theme/
  favicon: '/assets/images/favicon.ico'
  feature:
    tabs: true  


nav:



  - Getting Started: 
    - Versions: './getting-started/versions.md'
    - Install the Fetch.AI Ledger: 
      - "MacOS": './getting-started/installation-mac.md'
      - "Ubuntu": './getting-started/installation-ubuntu.md'
      - "Redhat": './getting-started/installation-redhat.md'
    - Run a local node: './getting-started/run-a-node.md'
    - Python Ledger API: './getting-started/python-api-install.md'
    - Open Economic Framework: './getting-started/oef-install.md'





  - Fetch Ledger:
    - Architecture:
      - "Fetch Ledger architecture": 'ledger/architecture.md'
      - "Running a constellation node": 'ledger/running-a-constellation.md'
    - Static and dynamic contracts:
      - "Static and dynamic contracts": 'ledger/static-dynamic.md'
#     - "Fetch token": 'ledger/fetch-token.md'
    - Maths and ML:
      - 'Maths library introduction': 'ledger/maths-lib-overview.md'
      - 'Machine learning introduction': 'ledger/ml-introduction.md'
    - Developer guide:
      - "Fetch Ledger style guide": 'ledger/style-guide.md'
      - "Fetch workflow": 'ledger/fetch-workflow.md'







  - Open Economic Framework:
    - Welcome:
      - "What is the OEF?": 'oef/index.md'
    - The Basics:
      - "Running a node" : 'oef/running-a-node.md'
      - "Get the SDK" : 'oef/sdk.md'
      - "Get a public key" : 'oef/public-key.md'
    - How It Works:
      - "Registering" : 'oef/registering.md'
      - "Advertising" : 'oef/advertising.md'
      - "Searching" : 'oef/searching.md'
      - "Negotiating" : 'oef/negotiating.md'
    - APIs:
      - "Python" : 'oef/python-API.md'
      - "Java/Kotlin" : 'oef/java-kotlin-API.md'





  - Etch Language:
    - Welcome:
        - "What's etch?": 'etch-language/index.md'
        - 'Getting started': 'etch-language/getstarted.md'
        - 'Debugging': 'etch-language/debug.md'
        - 'Release notes': 'etch-language/release-notes.md'
    - The Basics:
        - 'Syntax': 'etch-language/syntax.md'
        - 'Variables': 'etch-language/variables.md'
        - 'Operators': 'etch-language/operators.md'
        - 'Logical operators': 'etch-language/logic.md'
        - 'Control flow': 'etch-language/control-flow.md'
        - 'Strings': 'etch-language/strings.md'
        - 'Arrays': 'etch-language/arrays.md'
        - 'Functions': 'etch-language/functions.md'
 #       - 'Regex': 'etch-language/regex.md'
        - 'Error checking': 'etch-language/error-checking.md'
    - Fetch Ledger Types:
        - 'Persistent globals': 'etch-language/persistent-globals.md'
        - 'State': 'etch-language/states.md'
        - 'ShardedState': 'etch-language/sharded-state.md'
        - 'Address': 'etch-language/addresses.md'
        - 'Cryptographic functions': 'etch-language/crypto.md'
    - Mathematics:
        - 'Maths functions': 'etch-language/maths-functions.md'
        - 'Tensor': 'etch-language/tensor.md'
    - Machine Learning:
        - 'Graph': 'etch-language/graph.md'
        - 'DataLoader': 'etch-language/data-loaders.md'
        - 'Optimiser': 'etch-language/optimiser.md'
        - 'Scaler': 'etch-language/scaler.md'
        - 'TrainingPair': 'etch-language/training-pairs.md'
    - Extending Etch:
        - 'Extending etch in C++': 'etch-language/extending-etch.md'
    - Examples: 
        - 'Fetch logo': 'etch-language/examples/fetch-logo.md'
        - 'Mandelbrot': 'etch-language/examples/mandelbrot.md'
        - 'Searching algorithms': 'etch-language/examples/searching-algorithms.md'
        - 'Sorting algorithms': 'etch-language/examples/sorting-algorithms.md'
        - 'Discrete Fourier Transformation': 'etch-language/examples/dft.md'





  - Smart Contracts:
    - 'Introduction': 'smart-contracts/smart-contract-intro.md'
    - 'Data types': 'smart-contracts/data-types.md'
    - 'Memory': 'smart-contracts/memory.md'
    - 'Fees': 'smart-contracts/fees.md'
    - 'Wallets': 'smart-contracts/wallets.md'
    - 'Etch smart contracts': 'smart-contracts/smart-contracts.md'
    - 'Python environment': 'smart-contracts/pipenv.md'
    - 'Executing smart contracts': 'smart-contracts/executing-smart-contract-code.md'
    - 'Synergetic contracts': 'smart-contracts/synergetic.md'
    - 'Executing synergetic contracts': 'smart-contracts/executing-synergetic-code.md'




  - Tutorials:
      - "Hello world smart contract": 'tutorials/submitting_contract.md'
      - "Smart contract in stages": 'tutorials/smart-contract-in-stages.md'
      - "Get block number": 'tutorials/block-number.md'
      - "Create FET-20 contract": 'tutorials/erc20.md'
      - "Create FET-721 contract": 'tutorials/erc721.md'
#    - 'Deploying an agent': 'tutorials/prediction_agent.md'





# Options
extra:
  logo: 'assets/images/favicon.ico'

markdown_extensions:
  - pymdownx.superfences
  - admonition

extra_css:
    - css/my-styles.css