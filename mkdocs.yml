site_name: Fetch.ai Developer Documentation
site_url: https://docs.fetch.ai/
site_description: Everything you need to know about Fetch.ai. 
google_analytics: ['UA-150926604-1', 'mkdocs.org']
#repo_url: https://github.com/fetchai/docs // commented out to remove edit option
#repo_name: 'GitHub'
site_author: katharine.murphy@fetch.ai




theme:
  name: null
  logo:
    icon: 'assets/images/logo.png'
  custom_dir: theme/custom_theme
  favicon: '/assets/images/favicon.ico'
  feature:
    tabs: true  


nav:
  - Home : "/"
  - Getting Started: 
    - QuickStart : 'getting-started/quickstart.md'
    - Versions: 'getting-started/versions.md'
    # - Open Economic Framework: './getting-started/oef-install.md'
  

  - Fetch Ledger:
    - Architecture: 
      - "Fetch Ledger architecture": 'ledger/architecture.md'
      - Ledger Installation: 
        - "MacOS": 'getting-started/installation-mac.md'
        - "Ubuntu": 'getting-started/installation-ubuntu.md'
        - "Redhat": 'getting-started/installation-redhat.md'
      - "Running a node": 'ledger/running-a-constellation.md'
    - Static and dynamic contracts:
      - "Static and dynamic contracts": 'ledger/static-dynamic.md'
#     - "Fetch token": 'ledger/fetch-token.md'
    - 'Maths library introduction': 'ledger/maths-lib-overview.md'
    - Developer guide:
      - "Fetch Ledger style guide": 'ledger/style-guide.md'
      - "Fetch workflow": 'ledger/fetch-workflow.md'
    - Python Ledger API:
      - Installation: './getting-started/python-api-install.md'
      - Examples : 
        - Block Number : "ledger/python-ledger-api/examples/block-number.md"








  # - Open Economic Framework:
  #   - Welcome:
  #     - "What is the OEF?": 'oef/index.md'
  #   - The Basics:
  #     - "Running a node" : 'oef/running-a-node.md'
  #     - "Get the SDK" : 'oef/sdk.md'
  #     - "Get a public key" : 'oef/public-key.md'
  #   - How It Works:
  #     - "Registering" : 'oef/registering.md'
  #     - "Advertising" : 'oef/advertising.md'
  #     - "Searching" : 'oef/searching.md'
  #     - "Negotiating" : 'oef/negotiating.md'
  #   - APIs: 
  #     - "Python" : 'oef/python-API.md'
  #     - "Java/Kotlin" : 'oef/java-kotlin-API.md'




  - Agent Framework:
    - Welcome: 'aea/index.md'
    - AEA quick start: 'aea/quickstart.md'
    - The AEA universe:
      - "Vision": 'aea/vision.md'
      - "Application areas": 'aea/app-areas.md'
      # - "Relation to OEF and Ledger": 'aea/oef-ledger.md'
      - "Trust issues": 'aea/trust.md'
      # - "Two-layered machine learning": 'aea/two-layer.md'
    - Demos:
      - "Gym demo": 'aea/gym-plugin.md'
      - "Gym skill": 'aea/gym-skill.md'
      - "Weather skills": 'aea/weather-skills.md'
      - "TAC external app": 'aea/tac.md'
      # - "FIPA skill": 'aea/fipa-skill.md'
      # - "TAC skill": 'aea/tac-skill.md'
      # - "Car park agent": 'aea/car-park.md'
    - Architecture:
      - "Design principles": 'aea/design-principles.md'
      - "Architectural diagram": 'aea/diagram.md'
      - "Core components": 'aea/core-components.md'
      - "File structure": 'aea/file-structure.md'
    - Developer guide:
      - "Step by step": 'aea/steps.md'
      - "Skill": 'aea/skill.md'
      - "Build your own skill": 'aea/skill-guide.md'
      - "Protocol": 'aea/protocol.md'
      - "Connection": 'aea/connection.md'
      - "Scaffolding": 'aea/scaffolding.md'
      - "Logging": 'aea/logging.md'
      - CLI:
         - "CLI tool": 'aea/cli-how-to.md'
         - "Commands": 'aea/cli-commands.md'
         - "GUI": 'aea/cli-gui.md'
      - "Create an agent programmatically": 'aea/hacking-an-agent.md'
      - "Integrate with third parties": 'aea/integration.md'

  - Machine Learning:
    - 'Introduction': 'machine-learning/index.md'
    - 'Library architecture': 'machine-learning/library-architecture.md'
    - 'AI in smart contracts': 'machine-learning/smart-contract-example.md'
    - 'AI in synergetic contract': 'machine-learning/synergetic-contract-example.md'
    
  - Etch Language:
    - Welcome:
        - "What's etch?": 'etch-language/index.md'
        - 'Getting started': 'etch-language/getstarted.md'
        - 'Debugging': 'etch-language/debug.md'
        # - 'Release notes': 'etch-language/release-notes.md'
    - The Basics:
        - 'Syntax': 'etch-language/syntax.md'
        - 'Variables': 'etch-language/variables.md'
        - 'Operators': 'etch-language/operators.md'
        - 'Logical operators': 'etch-language/logic.md'
        - 'Control flow': 'etch-language/control-flow.md'
        - 'Strings': 'etch-language/strings.md'
        - 'Arrays': 'etch-language/arrays.md'
        - 'Functions': 'etch-language/functions.md'
        - Function Annotations:
          - 'Smart contract annotations': 'etch-language/sc-annotations.md'
          - 'Synergetic contract annotations': 'etch-language/syn-annotations.md'
 #       - 'Regex': 'etch-language/regex.md'
        - 'Error checking': 'etch-language/error-checking.md'
    - Fetch Ledger Types:
        - 'Persistent globals': 'etch-language/persistent-globals.md'
        - 'State': 'etch-language/states.md'
        - 'ShardedState': 'etch-language/sharded-state.md'
        - 'Address': 'etch-language/addresses.md'
        - 'Cryptographic functions': 'etch-language/crypto.md'
        - 'Context': 'etch-language/context.md'
        - 'Transaction': 'etch-language/transaction.md'
        - 'Balance and Transfer': 'etch-language/balance-transfer.md'
    - Mathematics:
        - 'Maths functions': 'etch-language/maths-functions.md'
        - 'Tensor': 'etch-language/tensor.md'
    - Machine Learning:
        - 'Model': 'etch-language/model.md'
        - 'Graph': 'etch-language/graph.md'
        - 'DataLoader': 'etch-language/data-loaders.md'
        - 'Optimiser': 'etch-language/optimiser.md'
        - 'Scaler': 'etch-language/scaler.md'
 #       - 'TrainingPair': 'etch-language/training-pairs.md'
    - Extending Etch:
        - 'Extending etch in C++': 'etch-language/extending-etch.md'
    - Examples: 
        - 'Fetch logo': 'etch-language/examples/fetch-logo.md'
        - 'Mandelbrot': 'etch-language/examples/mandelbrot.md'
        - 'Searching algorithms': 'etch-language/examples/searching-algorithms.md'
        - 'Sorting algorithms': 'etch-language/examples/sorting-algorithms.md'
        - 'Discrete Fourier Transformation': 'etch-language/examples/dft.md'





  - Smart Contracts:
    - Introduction: 'smart-contracts/smart-contract-intro.md'
    - Fetch.ai smart contracts:
      - 'Smart contracts in Etch': 'smart-contracts/etch-smart-contracts.md'
      - 'Development environment': 'smart-contracts/pipenv.md'
      - 'Executing smart contracts': 'smart-contracts/executing-smart-contract-code.md'
    - Synergetic contracts: 
      - 'Synergetic contracts': 'smart-contracts/synergetic.md'
      - 'Executing synergetic contracts': 'smart-contracts/executing-synergetic-code.md'
    - 'Memory': 'smart-contracts/memory.md'
    - 'Fees': 'smart-contracts/fees.md'
    - 'Wallets': 'smart-contracts/wallets.md'
 #   - Python Ledger API:
 #       - 'Public keys': 'smart-contracts/public-keys.md'



  - Tutorials:
      - "Create FET-1 contract": 'tutorials/fet1.md'
#      - "Create FET-2 contract": 'tutorials/fet2.md'
#    - 'Deploying an agent': 'tutorials/prediction_agent.md'

      - "Videos" : https://www.youtube.com/watch?v=mwkAUh-_uxA&list=PL09jEkqdEp94oV7XYsHvfvHwMTBC0QfwJ


# Options
extra:
  logo: 'assets/images/favicon.ico'
 # disqus: 'fetch-ai-developer-documentation'


markdown_extensions:
  - pymdownx.superfences
  - admonition

extra_css:
    - css/my-styles.css

extra_javascript:
    - js/menu.js
